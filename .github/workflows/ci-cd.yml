name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configurar JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Cache de dependencias Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Ejecutar tests y generar reporte de cobertura
        run: mvn clean test jacoco:report --file pom.xml

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configurar JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Compilar la aplicación (sin tests)
        run: mvn clean package -DskipTests --file pom.xml

      - name: Construir imagen Docker
        run: docker build -t inditex-app .

      # Los siguientes pasos están comentados pues no existe un servidor sonnar ni un registro para la imagen docker
      # - name: Iniciar sesión en Docker Hub
      #   run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      # - name: Publicar imagen en Docker Hub
      #   run: docker push inditex-app

      #
      # - name: Ejecutar análisis con Sonar
      #   uses: SonarSource/sonarcloud-github-action@master
      #   with:
      #     args: >
      #       -Dsonar.projectKey=PROJECT_KEY
      #       -Dsonar.organization=ORGANIZATION
      #       -Dsonar.host.url=https://sonarcloud.io
      #       -Dsonar.login=${{ secrets.SONAR_TOKEN }}
